<?php

namespace Elton\TeacherBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartActivityRepository extends EntityRepository
{
    /**
     * 
     * @param int $cart id of a cart
     * @param int $activity id of an activity
     * @return array that contain one cartActivity
     */
    public function getCartActivity($cart, $activity)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT ca
             FROM EltonTeacherBundle:CartActivity ca
             WHERE ca.cart = ?1
             AND ca.activity = ?2');
        $query->setParameter(1, $cart);
        $query->setParameter(2, $activity);
        
        
        $result = $query->getSingleResult();
        
        return $result;
    }
    
    /**
     * 
     * @param int $cartId id of a cart
     * @param bool $setted if the activity is the setted to the division = true, def false
     * @return array of cartActivity where cartId = $cartId and setted = $setted
     */
    public function getCartActivityBySetted($cartId, $setted = false)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT ca
             FROM EltonTeacherBundle:CartActivity ca
             WHERE ca.cart = ?1
             AND ca.setted = ?2');
        $query->setParameter(1, $cartId);
        $query->setParameter(2, $setted);
        
        $result = $query->getResult();
        return $result;
    }
    
    /**
     * @param int $cartId id of the cart we want to empty
     */
    public function deleteByCartId($cartId)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
                'DELETE'
                . 'FROM EltonTeacherBundle:CartActivity ca'
                . 'WHERE ca.cart = ?1');
        $query->setParameter(1, $cartId);
    }
}
