<?php

namespace Elton\DivisionBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DivisionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DivisionRepository extends EntityRepository
{
    /**
     * Function used to count the number of Division
     * @return array with one int
     */
    public function count()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT count(d)
             FROM EltonDivisionBundle:Division d');

        $result = $query->getSingleResult();
        
        return $result;
    }
    
    /**
     * Function used to find divisions by the their level
     * @param int $level id of the level
     * @return array of Division
     */
    public function getDivisionByLevel($level)
    {
        $level = (int)$level;
        $em = $this->getEntityManager();
        $query = $em->createQuery(
                'Select d
                From EltonDivisionBundle:Division d
                Join d.level le
                Where le.id = ?1');
        $query->setParameter(1, $level);
        $result = $query->getResult();
        
        return $result;
    }
    
    /**
     * Function used to find the division selected with his teacherId
     * @param int $teacherId if of a teacher
     * @return division
     */
    public function getSelectedDivisionByTeacherId($teacherId)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
                'Select d
                 From EltonDivisionBundle:Division d
                 Join d.teacher t
                 Where t.id = ?1
                 And d.selected = true');
        $query->setParameter(1, $teacherId);
        $result = $query->getResult();
        
        return $result;
    }
    
    /**
     * Function used to find the divisions not selected with his teacherId
     * @param int $teacherId if of a teacher
     * @return array of Division
     */
    public function getNotSelectedDivisionByTeacherId($teacherId)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
                'Select d
                 From EltonDivisionBundle:Division d
                 Join d.teacher t
                 Where t.id = ?1
                 And d.selected = false');
        $query->setParameter(1, $teacherId);
        $result = $query->getResult();
        
        return $result;
    }
}